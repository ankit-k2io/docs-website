
<div data-type="frontmatter" data-value="eyJ0aXRsZSI6IkVuYWJsZSBzZXJ2ZXJsZXNzIG1vbml0b3JpbmcgZm9yIEFXUyBMYW1iZGEiLCJjb250ZW50VHlwZSI6InBhZ2UiLCJ0ZW1wbGF0ZSI6ImJhc2ljRG9jIiwidG9waWNzIjpbXSwid2F0ZXJtYXJrIjoiQkVUQSIsInRyYW5zbGF0aW9uVHlwZSI6Imh1bWFuIn0=">
  <div data-key="title">Enable serverless monitoring for AWS Lambda</div>
</div>
<div data-type="import" data-value="aW1wb3J0IHsgTGluayB9IGZyb20gJ0BuZXdyZWxpYy9nYXRzYnktdGhlbWUtbmV3cmVsaWMn"></div>
<p>New Relic defines a <a href="/docs/apm/transactions/intro-transactions/transactions-new-relic-apm">web or non-web transaction</a> as one logical unit of work in a software application. Once you <a href="/docs/instrument-transactions-c-agent">instrument a transaction</a>, you can also instrument errors in the transaction so you can monitor them in the New Relic UI. In order to use the C SDK to monitor errors, you must manually instrument your source code by adding the New Relic function <code class="notranslate">newrelic_notice_error()</code> to it.</p>
<div data-type="component" data-component="Callout" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJ2YXJpYW50IiwidmFsdWUiOiJ0aXAifV0=">
  <div data-type="prop" data-prop="children">
    <p>To include function calls in error traces, use GNU's <code class="notranslate">-rdynamic</code> linker flag to <a href="/docs/install-c-agent-compile-link-your-code#compile">link your apps when compiling</a>. The <code class="notranslate">-rdynamic</code> linker flag gives you more meaningful error traces.</p>
  </div>
</div>
<h2 id="in-page-toc">Contents</h2>
<p>For an index of <mark data-type="component">documentation</mark> available during the preview, see the <a href="https://docs.newrelic.com/docs/c-agent-table-contents">C SDK table of contents</a>.</p>
<h2 id="errors">Instrument errors in transactions</h2>
<div data-type="component" data-component="Callout" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJ0aXRsZSIsInZhbHVlIjoiQ29kZSJ9LHsidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJ2YXJpYW50IiwidmFsdWUiOiJ0aXAifV0=">
  <div data-type="prop" data-prop="title">Code</div>
  <div data-type="prop" data-prop="children">
    <p>To include function calls in error traces, use GNU's <code class="notranslate">-rdynamic</code> linker flag to <a href="/docs/install-c-agent-compile-link-your-code#compile">link your apps when compiling</a>. The <code class="notranslate">-rdynamic</code> linker flag gives you more meaningful error traces.</p>
  </div>
</div>
<h2 id="errors"><code class="notranslate">instrument_errors</code></h2>
<p>To instrument errors in transactions:</p>
<ol>
  <li><a href="/docs/instrument-transactions-c-agent#start-transaction">Start a transaction</a>.</li>
  <li>Record an with <a href="https://source.datanerd.us/c-agent/c-agent/blob/master/examples/ex_notice_error.c"><code class="notranslate">newrelic_notice_error()</code></a>, supplying the required parameters.</li>
  <li><a href="/docs/instrument-transactions-c-agent#end-transaction">End the transaction</a>.</li>
</ol>
<table data-type="component">
  <thead data-type="component">
    <tr data-type="component">
      <th data-type="component" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJzdHlsZSIsInZhbHVlIjp7InR5cGUiOiJtZHhWYWx1ZUV4cHJlc3Npb24iLCJ2YWx1ZSI6Insgd2lkdGg6IFwiMjAwcHhcIiB9IiwicG9zaXRpb24iOnsic3RhcnQiOnsibGluZSI6NDIsImNvbHVtbiI6MTcsIm9mZnNldCI6MTk1Nn0sImVuZCI6eyJsaW5lIjo0MiwiY29sdW1uIjozNywib2Zmc2V0IjoxOTc2fX19fV0=">
        <p><strong>If you want to...</strong></p>
      </th>
      <th data-type="component">
        <p><strong>Do this...</strong></p>
      </th>
    </tr>
  </thead>
  <tbody data-type="component">
    <tr data-type="component">
      <td data-type="component">
        <p>Run recent queries</p>
      </td>
      <td data-type="component">
        <p>Select a recent query from the history list. The query will appear on the command line, where it can be edited.</p>
      </td>
    </tr>
    <tr data-type="component">
      <td data-type="component">
        <p>Delete queries</p>
      </td>
      <td data-type="component">
        <p>Mouse over a query in the history list so the delete <span data-type="component" data-component="Icon" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJuYW1lIiwidmFsdWUiOiJmZS10cmFzaC0yIn1d"> </span> icon appears. The query history only retains the twenty most recent queries, so it can be useful to delete unwanted queries to make room for queries you like.</p>
      </td>
    </tr>
    <tr data-type="component">
      <td data-type="component">
        <p>Favorite queries</p>
      </td>
      <td data-type="component">
        <p>Mouse over a query in the history list and the favorite <span data-type="component" data-component="Icon" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJuYW1lIiwidmFsdWUiOiJmZS1zdGFyIn1d"> </span> icon appears. Then, to view and use your favorite queries, select the <strong>Favorites</strong> tab.</p>
      </td>
    </tr>
  </tbody>
</table>
<pre data-type="component" data-component="CodeBlock" data-props="eyJsYW5nIjoicHl0aG9uIiwibWV0YSI6ImNvcHlhYmxlPWZhbHNlIiwidmFsdWUiOiJAbmV3cmVsaWMuYWdlbnQubGFtYmRhX2hhbmRsZXIoKVxuZGVmIGhhbmRsZXIoZXZlbnQsIGNvbnRleHQpOlxuICAgIG5ld3JlbGljLmFnZW50LnJlY29yZF9jdXN0b21fZXZlbnQoJ0N1c3RvbUV2ZW50Jywgeydmb28nOiAnYmFyJ30pIiwicG9zaXRpb24iOnsic3RhcnQiOnsibGluZSI6ODUsImNvbHVtbiI6MSwib2Zmc2V0IjoyOTM3fSwiZW5kIjp7ImxpbmUiOjg5LCJjb2x1bW4iOjQsIm9mZnNldCI6MzA5N30sImluZGVudCI6WzEsMSwxLDFdfX0="></pre>
<div data-type="component" data-component="TechTileGrid">
  <div data-type="prop" data-prop="children">
    <div data-type="component" data-component="TechTile" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJuYW1lIiwidmFsdWUiOiJpT1MifSx7InR5cGUiOiJtZHhBdHRyaWJ1dGUiLCJuYW1lIjoiaWNvbiIsInZhbHVlIjoibG9nby1hcHBsZSJ9LHsidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJ0byIsInZhbHVlIjoiL2FnZW50cy9pb3MtYWdlbnQifV0=">
      <div data-type="prop" data-prop="name">iOS</div>
    </div>
    <div data-type="component" data-component="TechTile" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJuYW1lIiwidmFsdWUiOiJBbmRyb2lkIn0seyJ0eXBlIjoibWR4QXR0cmlidXRlIiwibmFtZSI6Imljb24iLCJ2YWx1ZSI6ImxvZ28tYW5kcm9pZCJ9LHsidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJ0byIsInZhbHVlIjoiL2FnZW50cy9hbmRyb2lkLWFnZW50In1d">
      <div data-type="prop" data-prop="name">Android</div>
    </div>
    <div data-type="component" data-component="TechTile" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJuYW1lIiwidmFsdWUiOiJ0dk9TIn0seyJ0eXBlIjoibWR4QXR0cmlidXRlIiwibmFtZSI6Imljb24iLCJ2YWx1ZSI6ImxvZ28tYXBwbGUifSx7InR5cGUiOiJtZHhBdHRyaWJ1dGUiLCJuYW1lIjoidG8iLCJ2YWx1ZSI6Ii9hZ2VudHMvdHZvcy1hZ2VudCJ9XQ==">
      <div data-type="prop" data-prop="name">tvOS</div>
    </div>
  </div>
</div>
<div data-type="component" data-component="CollapserGroup">
  <div data-type="prop" data-prop="children">
    <div data-type="component" data-component="Collapser" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJpZCIsInZhbHVlIjoiZXZlbnRzLWFwaS1rZXkifSx7InR5cGUiOiJtZHhBdHRyaWJ1dGUiLCJuYW1lIjoidGl0bGUiLCJ2YWx1ZSI6IldoYXQgYWNjb3VudCBjaGFuZ2VzIGhhdmUgYmVlbiBtYWRlIHVzaW5nIGFuIEFQSSBrZXk/In1d">
      <div data-type="prop" data-prop="title">What account changes have been made using an API key?</div>
      <div data-type="prop" data-prop="children">
        <p>To see detailed information about changes to the account that were made using an API key during a specific time frame, include <a href="#actorType"><code class="notranslate">actorType = 'api_key'</code></a> in the query. For example:</p>
        <pre data-type="component" data-component="CodeBlock" data-props="eyJsYW5nIjpudWxsLCJtZXRhIjpudWxsLCJ2YWx1ZSI6IlNFTEVDVCBhY3Rpb25JZGVudGlmaWVyLCBkZXNjcmlwdGlvbiwgdGFyZ2V0VHlwZSwgdGFyZ2V0SWQsIGFjdG9yQVBJS2V5LCBhY3RvcklkLCBhY3RvckVtYWlsXG5GUk9NIE5yQXVkaXRFdmVudCBXSEVSRSBhY3RvclR5cGUgPSAnYXBpX2tleScgU0lOQ0UgMSB3ZWVrIGFnbyIsInBvc2l0aW9uIjp7InN0YXJ0Ijp7ImxpbmUiOjExOCwiY29sdW1uIjoxLCJvZmZzZXQiOjM3MDl9LCJlbmQiOnsibGluZSI6MTIyLCJjb2x1bW4iOjMsIm9mZnNldCI6Mzg5MX0sImluZGVudCI6WzEsMSwxLDFdfX0="></pre>
      </div>
    </div>
    <div data-type="component" data-component="Collapser" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJpZCIsInZhbHVlIjoic3ludGgtdXNlciJ9LHsidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJ0aXRsZSIsInZhbHVlIjoiU3ludGhldGljIG1vbml0b3Jpbmc6IFdoYXQgbW9uaXRvcnMgd2VyZSBjcmVhdGVkIGJ5IGEgc3BlY2lmaWMgdXNlcj8ifV0=">
      <div data-type="prop" data-prop="title">Synthetic monitoring: What monitors were created by a specific user?</div>
      <div data-type="prop" data-prop="children">
        <p>To query updates with your synthetic monitor made by a specific user, include the <a href="/attribute-dictionary/nrauditevent/actionidentifier"><code class="notranslate">actionIdentifier</code></a> and <a href="/attribute-dictionary/nrauditevent/actoremail"><code class="notranslate">actorEmail</code></a> attribute in your query. For example:</p>
        <pre data-type="component" data-component="CodeBlock" data-props="eyJsYW5nIjpudWxsLCJtZXRhIjpudWxsLCJ2YWx1ZSI6IlNFTEVDVCBjb3VudCgqKSBGUk9NIE5yQXVkaXRFdmVudFxuV0hFUkUgYWN0aW9uSWRlbnRpZmllciA9ICdzeW50aGV0aWNzX21vbml0b3IudXBkYXRlX3NjcmlwdCdcbkZBQ0VUIGFjdG9yRW1haWwsIGFjdGlvbklkZW50aWZpZXIsIGRlc2NyaXB0aW9uXG5TSU5DRSAxIHdlZWsgYWdvIExJTUlUIDEwMDAiLCJwb3NpdGlvbiI6eyJzdGFydCI6eyJsaW5lIjoxMzAsImNvbHVtbiI6MSwib2Zmc2V0Ijo0Mjg4fSwiZW5kIjp7ImxpbmUiOjEzNiwiY29sdW1uIjozLCJvZmZzZXQiOjQ0OTJ9LCJpbmRlbnQiOlsxLDEsMSwxLDEsMV19fQ=="></pre>
      </div>
    </div>
  </div>
</div>
<div data-type="component" data-component="CollapserGroup">
  <div data-type="prop" data-prop="children">
    <div data-type="component" data-component="Collapser" data-props="W3sidHlwZSI6Im1keEF0dHJpYnV0ZSIsIm5hbWUiOiJpZCIsInZhbHVlIjoibGFjay1jcHUtY3JlZGl0LWJhbGFuY2UifSx7InR5cGUiOiJtZHhBdHRyaWJ1dGUiLCJuYW1lIjoidGl0bGUiLCJ2YWx1ZSI6IkxhY2sgb2YgQ1BVIENyZWRpdCBCYWxhbmNlIn1d">
      <div data-type="prop" data-prop="title">Lack of CPU Credit Balance</div>
      <div data-type="prop" data-prop="children">
        <table data-type="component">
          <tbody data-type="component">
            <tr data-type="component">
              <td data-type="component">
                <p><strong>Condition name</strong></p>
              </td>
              <td data-type="component">
                <p>Lack of CPU Credit Balance</p>
              </td>
            </tr>
            <tr data-type="component">
              <td data-type="component">
                <p><strong>Cloud entity type</strong></p>
              </td>
              <td data-type="component">
                <p>AWS RDS DB instance</p>
              </td>
            </tr>
            <tr data-type="component">
              <td data-type="component">
                <p><strong>Description</strong></p>
              </td>
              <td data-type="component">
                <p>The database instance is running out of CPU Credit Balance.</p>
              </td>
            </tr>
            <tr data-type="component">
              <td data-type="component">
                <p><strong>Recommended action</strong></p>
              </td>
              <td data-type="component">
                <p>You may need to reduce the load of the RDS instance, or use a larger RDS instance type.</p>
              </td>
            </tr>
            <tr data-type="component">
              <td data-type="component">
                <p><strong>Reference</strong></p>
              </td>
              <td data-type="component">
                <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html">DB instance storage</a> or <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-credits-baseline-concepts.html">CPU Credits and Baseline Performance for Burstable Performance Instances</a>.</p>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
